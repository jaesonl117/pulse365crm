rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserDoc(userId) {
      return request.auth.uid == userId;
    }
    
    function belongsToTenant(tenantId) {
      return resource.data.tenantId == request.auth.token.tenantId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isUserDoc(userId);
      allow create: if isAuthenticated() && isUserDoc(userId);
      allow update: if isAuthenticated() && isUserDoc(userId);
      allow delete: if false; // Prevent user deletion through client
    }
    
    // Tenants collection
    match /tenants/{tenantId} {
      allow read: if isAuthenticated() && belongsToTenant(tenantId);
      allow write: if false; // Only allow tenant management through admin functions
    }
    
    // Leads collection
    match /leads/{leadId} {
      allow read: if isAuthenticated() && belongsToTenant(resource.data.tenantId);
      allow create: if isAuthenticated() && belongsToTenant(request.resource.data.tenantId);
      allow update: if isAuthenticated() && belongsToTenant(resource.data.tenantId);
      allow delete: if isAuthenticated() && belongsToTenant(resource.data.tenantId);
    }
  }
}